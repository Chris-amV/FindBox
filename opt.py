import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from box import point, Box, space, d1, d1D, project
import copy
import random
from timeit import default_timer as timer
from model import d2
from LanguageBoxGeneral import sampleC
from ss_tracker.ss_track import ss_track


B1 = Box(10)
B2 = Box(10)
B3 = Box(10)
B4 = Box(10)
B5 = Box(10)
B6 = Box(10)
B7 = Box(10)
B8 = Box(10)
B9 = Box(10)
B10 = Box(10)
B11 = Box(10)
B12 = Box(10)
B13 = Box(10)
B14 = Box(10)
B15 = Box(10)
B16 = Box(10)
B17 = Box(10)
B18 = Box(10)
B19 = Box(10)
B20 = Box(10)
B21 = Box(10)
B22 = Box(10)
B23 = Box(10)
B24 = Box(10)
B25 = Box(10)
B26 = Box(10)
B27 = Box(10)
B28 = Box(10)
B29 = Box(10)
B30 = Box(10)
B31 = Box(10)
B32 = Box(10)
B33 = Box(10)
B34 = Box(10)
B35 = Box(10)
B36 = Box(10)
B37 = Box(10)
B38 = Box(10)
B39 = Box(10)
B40 = Box(10)
B41 = Box(10)
B42 = Box(10)
B43 = Box(10)
B44 = Box(10)
B45 = Box(10)
B46 = Box(10)
B47 = Box(10)
B48 = Box(10)
B49 = Box(10)
B50 = Box(10)
B51 = Box(10)
B52 = Box(10)
B53 = Box(10)
B54 = Box(10)
B55 = Box(10)
B56 = Box(10)
B57 = Box(10)
B58 = Box(10)
B59 = Box(10)
B60 = Box(10)
B61 = Box(10)
B62 = Box(10)
B63 = Box(10)
B64 = Box(10)
B65 = Box(10)
B66 = Box(10)
B67 = Box(10)
B68 = Box(10)
B69 = Box(10)
B70 = Box(10)
B71 = Box(10)
B72 = Box(10)
B73 = Box(10)
B74 = Box(10)
B75 = Box(10)
B76 = Box(10)
B77 = Box(10)
B78 = Box(10)
B79 = Box(10)
B80 = Box(10)
B81 = Box(10)
B82 = Box(10)
B83 = Box(10)
B84 = Box(10)
B85 = Box(10)
B86 = Box(10)
B87 = Box(10)
B88 = Box(10)

space1 = space(10)
space2 = space(10)
space3 = space(10)
space4 = space(10)
space5 = space(10)

phi1 = r"always(x1 >= 0 and x1 <= 10) and always not (x1 >= 3 and x1 <= 5) and always(x1 >= -10 and x1 <= 10)"
B1.Borders = [[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[0.0,3.0]]
B2.Borders = [[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[0.0,3.0],[0.0,3.0]]
B3.Borders = [[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[0.0,3.0],[5.0,10.0]]
B4.Borders = [[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0]]
B5.Borders = [[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0]]
B6.Borders = [[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0]]
B7.Borders = [[5.0,10.0],[0.0,3.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0]]
B8.Borders = [[5.0,10.0],[0.0,3.0],[0.0,3.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0]]
B9.Borders = [[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[0.0,3.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0]]
B10.Borders = [[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[0.0,3.0]]
B11.Borders = [[0.0,3.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0]]
B12.Borders = [[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[0.0,3.0]]
B13.Borders = [[0.0,3.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0]]
B14.Borders = [[0.0,3.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[5.0,10.0],[0.0,3.0]]
B15.Borders = [[0.0,3.0],[0.0,3.0],[0.0,3.0],[0.0,3.0],[5.0,10.0],[0.0,3.0],[5.0,10.0],[5.0,10.0],[0.0,3.0],[0.0,3.0]]


space1.Boxes = [B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15]


phi2 = r"((eventually[0,7](x1 >= 0 and x1 <= 3)) and (always[8,10](x1 >=0 and x1 <= 3))) and (always(x1 >= 0 and x1 <= 10))"
B18.Borders = [[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,3.0]]
B19.Borders = [[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,3.0]]
B20.Borders = [[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,3.0]]
B21.Borders = [[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,3.0]]
B22.Borders = [[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,3.0],[0.0,3.0]]
B23.Borders = [[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,3.0]]
B24.Borders = [[0.0,3.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[0.0,3.0],[0.0,3.0]]
B25.Borders = [[0.0,0.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,3.0]]

space2.Boxes = [B18,B19,B20,B21,B22,B23,B24,B25]

phi3 = r"((eventually[0, 10] (x1 >= 0 and x1 <= 3)) and (eventually[0, 10] (x1 >= 7 and x1 <= 10))) and (always(x1 >= 0 and x1 <= 10))"
# B26.Borders = [[10.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0]]
# B27.Borders = [[10.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B28.Borders = [[10.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0]]
# B29.Borders = [[10.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B30.Borders = [[10.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B31.Borders = [[10.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0]]
# B32.Borders = [[10.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B33.Borders = [[10.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,3.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
B34.Borders = [[0.0,3.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0],[2.0,10.0]]
# B35.Borders = [[0.0,0.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[7.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B36.Borders = [[0.0,0.0],[0.0,10.0],[0.0,10.0],[7.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B37.Borders = [[0.0,0.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[7.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B38.Borders = [[0.0,0.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[7.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B39.Borders = [[0.0,0.0],[0.0,10.0],[7.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B40.Borders = [[0.0,0.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[7.0,10.0],[0.0,10.0],[0.0,10.0]]
# B41.Borders = [[0.0,0.0],[7.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0]]
# B42.Borders = [[0.0,0.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[7.0,10.0],[0.0,10.0]]
# B43.Borders = [[0.0,0.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[0.0,10.0],[7.0,10.0]]
B44.Borders = [[7.0,10.0],[0.0,8.0],[0.0,8.0],[0.0,8.0],[0.0,8.0],[0.0,8.0],[0.0,8.0],[0.0,8.0],[0.0,8.0],[0.0,8.0]]

space3.Boxes = [B34,B44]


phi4 = r"((eventually[0, 3] (x1 >= 0 and x1 <= 2)) and (eventually[3, 6] (x1 >= 4 and x1 <= 6)) and (eventually[6, 9] (x1 >= 15 and x1 <= 17))) and (always(x1 >= 0 and x1 <= 20))" 

B45.Borders = [[0.0,2.0],[1.0,20.0],[1.0,20.0],[1.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,20.0]]
B46.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,20.0],[4.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[15.0,17.0],[0.0,20.0]]
B47.Borders = [[0.0,20.0],[0.0,20.0],[0.0,2.0],[4.0,20.0],[4.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[15.0,17.0],[0.0,20.0]]
B48.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0]]
B49.Borders = [[0.0,20.0],[0.0,20.0],[0.0,2.0],[4.0,6.0],[0.0,6.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[0.0,20.0]]
B50.Borders = [[0.0,20.0],[0.0,20.0],[0.0,2.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[15.0,20.0]]
B51.Borders = [[0.0,20.0],[0.0,20.0],[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,17.0],[0.0,20.0]]
B52.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[0.0,20.0]]
B53.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B54.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,20.0]]
B55.Borders = [[0.0,20.0],[0.0,20.0],[0.0,2.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B56.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[4.0,6.0],[0.0,20.0],[0.0,17.0],[0.0,20.0],[0.0,20.0],[15.0,17.0]]
B57.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0]]
B58.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[0.0,6.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B59.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[4.0,20.0],[4.0,6.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0]]
B60.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[4.0,6.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[0.0,20.0]]
B61.Borders = [[0.0,20.0],[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B62.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0]]
B63.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0]]
B64.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B65.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[0.0,20.0]]
B66.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B67.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[0.0,20.0]]
B68.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[15.0,20.0],[15.0,17.0],[0.0,20.0]]
B69.Borders = [[0.0,20.0],[0.0,20.0],[0.0,2.0],[0.0,6.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0]]
B70.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[0.0,20.0]]
B71.Borders = [[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,2.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B72.Borders = [[0.0,20.0],[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0]]
B73.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[15.0,17.0],[0.0,20.0]]
B74.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[15.0,17.0],[0.0,20.0]]
B75.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,20.0],[4.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B76.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,20.0],[4.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,20.0]]
B77.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0]]
B78.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[0.0,20.0]]
B79.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0],[15.0,20.0]]
B80.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[15.0,17.0],[0.0,20.0],[0.0,17.0],[0.0,20.0]]
B81.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0],[0.0,20.0]]
B82.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B83.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0]]
B84.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0]]
B85.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]
B86.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0]]
B87.Borders = [[0.0,2.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[4.0,6.0],[0.0,20.0],[0.0,20.0],[0.0,20.0],[15.0,17.0],[0.0,20.0]]

space4.Boxes = [B45,B46,B47,B48,B49,B50,B51,B52,B53,B54,B55,B56,B57,B58,B59,B60,B61,B62,B63,B64,B65,B66,B67,B68,B69,B70,B71,B72,B73,B74,B75,B76,B77,B78,B79,B80,B81,B82,B83,B84,B85,B86,B87]

phi5 = r"((always[0, 5] (x1 >= 0 and x1 <= 3)) and (always[6, 10] (x1 >= 50 and x1 <= 60)))"
B88.Borders = [[0,3],[0,3],[0,3],[0,3],[0,3],[50,60],[50,60],[50,60],[50,60],[50,60]]
space5.Boxes = [B88]

spaces = [space1,space2,space3,space4,space5]
s = 4
avrgResults = []
minA = []
while s <5:
    S = spaces[3]

    ptemp = point(10)
    pfail = point(10)
    test = sampleC(S,100)
    results = []
    fail = 0
    print(s)
    min = 1000000
    for i in test:
        count = 0
        ptemp.coord = i.coord
        while count < 40:
            track = ss_track(ptemp.coord)
            x_nl = track.trajectory()
            # print("ptemp: ",ptemp.coord)
            # print("pfail: ",pfail.coord)
            # print("x_nl: ",x_nl)
            if x_nl == pfail.coord:
                fail += 1
                print("failed! for sure")
                break
            for i in range(len(x_nl)):
                ptemp.coord[i] = x_nl[i]
                pfail.coord[i] = x_nl[i]
            # print("ptrack: ",ptemp.coord)
            if d1D(ptemp,S)[0] >= 0:
                print("succesful tracking!",count)
                # print("distance: ",d1D(ptemp,S))
                results.append(count)
                if count < min:
                    min = count
                break
            else:
                # print("failed tracking! projecting...",count)
                ptemp.coord = project(ptemp,S).coord
                count += 1
        if count == 40:
            fail += 1
            print("failed!")
        # print(ptemp.coord)
    if len(results) > 0:
        avrgResults.append(sum(results)/len(results))
    else:
        avrgResults.append(0)
    minA.append(min)
    avrgResults.append(fail)
    print("Average number of iterations:",avrgResults[s])
    print("Number of failed tracking:",fail)
    print("min: ",min)  
    s += 1

# print("Average number of iterations:",avrgResults)
# print("Number of failed tracking:",fail)
# print("number of iterations:",results)

track = ss_track([1,2,3,4,5,6,7,8,9,10])
x_nl = track.trajectory()
print("x_nl: ",x_nl)
