import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
import box
from box import point, Box, space, d1,d1D
import copy
import random
from timeit import default_timer as timer
from model import d2

#THIS FILE IS USED TO VISUALIZE THE BOXES AND THE POINTS

def sample(U,N):
    n = U.dim
    result = []
    Area = []
    total = 0
    for boxes in U.Boxes:
        a = 1
        for i in range(0,n):
            a *= boxes.Borders[i][1] - boxes.Borders[i][0]
        Area.append(a)
        total += a

    for boxes in U.Boxes:
        nbPoints = int(N*Area[U.Boxes.index(boxes)]/total + 1)
        for i in range(0,nbPoints):
            bre = 0
            p = point(n)
            for j in range(0,n):
                if int(boxes.Borders[j][0]+1) >= int(boxes.Borders[j][1])-1:
                    p.coord[j] = boxes.Borders[j][0] + 0.5
                else:
                    p.coord[j] = random.randint(boxes.Borders[j][0]+1,boxes.Borders[j][1]-1)
            if bre == 0:
                result.append(p)
    return result

B1 = Box(10)
B2 = Box(10)
B3 = Box(10)
B4 = Box(10)
B5 = Box(10)
B6 = Box(10)
B7 = Box(10)
B8 = Box(10)
B9 = Box(10)
B10 = Box(10)
B11 = Box(10)
B12 = Box(10)
B13 = Box(10)
B14 = Box(10)
B15 = Box(10)
B16 = Box(10)
B17 = Box(10)
B18 = Box(10)
B19 = Box(10)
B20 = Box(10)

B1.Borders = [[-20,20],[-20,20],[-20,20],[-20,20],[-20,3],[10,20],[10,20],[-20,20],[-20,20],[-20,20]]
B2.Borders = [[-20,20],[-20,20],[-20,20],[-20,20],[-20,3],[-20,3],[10,20],[-20,20],[-20,20],[-20,20]]
B3.Borders = [[-20,20],[-20,20],[-20,20],[-20,20],[10,20],[-20,3],[-20,3],[-20,20],[-20,20],[-20,20]]
B4.Borders = [[-20,20],[-20,20],[-20,20],[-20,20],[-20,3],[-20,3],[-20,3],[-20,20],[-20,20],[-20,20]]
B5.Borders = [[-20,20],[-20,20],[0,10],[-20,20],[-20,3],[10,20],[-20,20],[-20,20],[-20,20],[-20,20]]
B6.Borders = [[-20,20],[-20,20],[-20,20],[-20,20],[10,20],[10,20],[-20,3],[-20,20],[-20,20],[-20,20]]
B7.Borders = [[-20,20],[0,10],[-20,20],[-20,20],[-20,20],[10,20],[-20,3],[-20,20],[-20,20],[-20,20]]
B8.Borders = [[-20,20],[-20,20],[0,10],[-20,20],[-20,3],[-20,3],[-20,20],[-20,20],[-20,20],[-20,20]]
B9.Borders = [[-20,20],[-20,20],[-20,20],[-20,20],[-20,3],[10,20],[-20,3],[-20,20],[-20,20],[-20,20]]
B10.Borders = [[-20,20],[-20,20],[-20,20],[-20,20],[10,20],[-20,3],[10,20],[-20,20],[-20,20],[-20,20]]
B11.Borders = [[-20,20],[-20,20],[-20,20],[-20,20],[10,20],[10,20],[10,20],[-20,20],[-20,20],[-20,20]]
B12.Borders = [[-20,20],[0,10],[-20,20],[-20,20],[-20,20],[-20,3],[10,20],[-20,20],[-20,20],[-20,20]]
B13.Borders = [[-20,20],[-20,20],[0,10],[-20,20],[10,20],[-20,3],[-20,20],[-20,20],[-20,20],[-20,20]]
B14.Borders = [[-20,20],[0,10],[-20,20],[-20,20],[-20,20],[-20,3],[-20,3],[-20,20],[-20,20],[-20,20]]
B15.Borders = [[-20,20],[-20,20],[0,10],[-20,20],[10,20],[10,20],[-20,20],[-20,20],[-20,20],[-20,20]]
B16.Borders = [[-20,20],[0,10],[-20,20],[-20,20],[-20,20],[10,20],[10,20],[-20,20],[-20,20],[-20,20]]
B17.Borders = [[-20,20],[0,10],[0,10],[-20,20],[-20,20],[-20,20],[-20,20],[-20,20],[-20,20],[-20,20]]

# B1.Borders =[[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B2.Borders =[[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B3.Borders =[[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B4.Borders =[[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B5.Borders =[[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B6.Borders =[[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,3.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B7.Borders =[[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B8.Borders =[[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B9.Borders =[[-20.0,20.0],[0.0,10.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B10.Borders =[[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B11.Borders =[[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B12.Borders =[[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B13.Borders =[[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[10.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B14.Borders =[[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B15.Borders =[[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B16.Borders =[[-20.0,20.0],[0.0,10.0],[0.0,10.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]

# B1.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B2.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# B3.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B4.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B5.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,10.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B6.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B7.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B8.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# B9.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# B10.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B11.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B12.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# B13.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B14.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# B15.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# B16.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]

# IB1 = Box(20)
# IB2 = Box(20)
# IB3 = Box(20)
# IB4 = Box(20)
# IB5 = Box(20)
# IB6 = Box(20)
# IB7 = Box(20)
# IB8 = Box(20)
# IB9 = Box(20)
# IB10 = Box(20)
# IB11 = Box(20)
# IB12 = Box(20)
# IB13 = Box(20)
# IB14 = Box(20)
# IB15 = Box(20)
# IB16 = Box(20)
# IB17 = Box(20)
# IB18 = Box(20)
# IB19 = Box(20)
# IB20 = Box(20)

# IB1.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB2.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB3.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB4.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB5.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB6.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB7.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB8.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# IB9.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB10.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# IB11.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# IB12.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,3.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB13.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB14.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# IB15.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[10.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB16.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB17.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# IB18.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]
# IB19.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[10.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0]]
# IB20.Borders = [[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,3.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0],[0.0,10.0],[0.0,10.0],[-20.0,20.0],[-20.0,20.0],[-20.0,20.0]]

S = space(10)
S.Boxes = [B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17]

# S1 = space(20)
# S1.Boxes = [IB1,IB2,IB3,IB4,IB5,IB6,IB7,IB8,IB9,IB10,IB11,IB12,IB13,IB14,IB15,IB16,IB17,IB18,IB19,IB20]



# over = 0
# under = 0
# for i in Sam:
#     if (d2(i) <0 and d1(i,S1) > 0):
#         over += 1
#     if (d2(i) >0 and d1(i,S1) < 0):
#         under += 1

# print(over/1000 *100)
# print(under/1000 *100)


# [[-50.0,50.0],[0.0,5.0],[-50.0,50.0]]
# [[-50.0,50.0],[-50.0,50.0],[0.0,5.0]]
# [[0.0,5.0],[-1,101],[-1.0,1.0]]
# [[0.0,5.0],[4.0,50.0],[4.0,50.0]]
# [[0.0,5.0],[4.0,50.0],[-50.0,1.0]]
# [[0.0,5.0],[-50.0,1.0],[4.0,50.0]]
# [[0.0,5.0],[-1.0,1.0],[-1,101]]




#### EXPERIMENTS FOR PAPER


space1 = space(10)
space2 = space(10)
space3 = space(10)
space4 = space(10)
space5 = space(10)

phi1 = r"(always(x1 >= 0 and x1 <= 10) and always not (x1 >= 3 and x1 <= 5)) and (always(x1 >= 0 and x1 <= 10))"
def phi1Set():
    space1 = space(10)
    Bo = Box(10)
    Bo.Borders = [[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10]]
    B = copy.deepcopy(Bo)
    done = False
    while done == False:
        i = 0
        while True:
            if B.Borders[i] == [5,10]:
                B.Borders[i] = [0,3]
                break
            else:
                B.Borders[i] = [5,10]
                i += 1
            if i == 10:
                done = True
                break
        space1.addBoxes(B)
        B = copy.deepcopy(B)
    return space1


phi2 = r"((eventually[0,7](x1 >= 0 and x1 <= 3)) and (always[8,10](x1 >=0 and x1 <= 3))) and (always(x1 >= 0 and x1 <= 10))"
def phi2Set():
    space1 = space(10)
    Bo = Box(10)
    Bo.Borders = [[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,3],[0,3]]
    for j in range(8):
        B = copy.deepcopy(Bo)
        B.Borders[j] = [0,3]
        space1.addBoxes(B)
    return space1

phi3 = r"((eventually[0, 10] (x1 >= 0 and x1 <= 3)) and (eventually[0, 10] (x1 >= 7 and x1 <= 10))) and (always(x1 >= 0 and x1 <= 10))"

def phi3Set():
    space1 = space(10)
    for i in range(10):
        Bo = Box(10)
        Bo.Borders = [[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10]]
        Bo.Borders[i] = [0,3]
        for j in range(10):
            B = copy.deepcopy(Bo)
            if i == j:
                continue
            else:
                B.Borders[j] = [7,10]
            space1.addBoxes(B)
    return space1


phi4 = r"((eventually[0, 3] (x1 >= 0 and x1 <= 2)) and (eventually[3, 6] (x1 >= 4 and x1 <= 6)) and (eventually[6, 9] (x1 >= 15 and x1 <= 17))) and (always(x1 >= 0 and x1 <= 20))"
def phi4Set():
    space1 = space(10)
    for i in range(3):
        Bo = Box(10)
        Bo.Borders = [[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10]]
        Bo.Borders[i] = [0,2]
        for j in range(3,6):
            B = copy.deepcopy(Bo)
            B.Borders[j] = [4,6]
            for k in range(6,10):
                B1 = copy.deepcopy(B)
                B1.Borders[k] = [15,17]
                space1.addBoxes(B1)
    return space1

phi5 = r"((always[0, 5] (x1 >= 0 and x1 <= 3)) and (always[6, 10] (x1 >= 50 and x1 <= 60)))"
B = Box(10)
B.Borders = [[0,3],[0,3],[0,3],[0,3],[0,3],[50,60],[50,60],[50,60],[50,60],[50,60]]
space5.Boxes = [B]

space1 = phi1Set()
space2 = phi2Set()
space3 = phi3Set()
space4 = phi4Set()

spaces = [space1,space2,space3,space4,space5]



B = Box(10)
B.Borders = [[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10],[0,10]]

U = space(10)
U.Boxes = [B]

for d in [spaces[2]]:
    S = d
    Sam = sample(U,10000)
    over = 0
    under = 0
    for i in Sam:
        print(i.coord)
        print(d2(i))
        print(d1D(i,S))
        if (d2(i) <0 and d1(i,S) > 0):
            over += 1
        if (d2(i) >0 and d1(i,S) < 0):
            under += 1

    print(over/10000 *100)
    print(under/10000 *100)
